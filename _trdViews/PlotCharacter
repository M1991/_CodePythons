//@version=4
study("Three MM Cross", overlay=true)

typeofMA1 = input(title="Type of MA 1", defval="EMA", options=["RMA", "SMA", "EMA", "WMA", "VWMA", "SMMA", "KMA", "TMA", "HullMA", "DEMA", "TEMA", "CTI"])
length_ma1 = input(15, title = "MA 1", type=input.integer)

typeofMA2 = input(title="Type of MA 2", defval="EMA", options=["RMA", "SMA", "EMA", "WMA", "VWMA", "SMMA", "KMA", "TMA", "HullMA", "DEMA", "TEMA", "CTI"])
length_ma2 = input(15, title = "MA 2", type=input.integer)

typeofMA3 = input(title="Type of MA 3", defval="EMA", options=["RMA", "SMA", "EMA", "WMA", "VWMA", "SMMA", "KMA", "TMA", "HullMA", "DEMA", "TEMA", "CTI"])
length_ma3 = input(90, title = "MA 3", type=input.integer)


MA_valuation(ma1, ma2, ma3, mode) =>
    if (mode == 0) // DOWN
        if (ma1 <= ma2 and ma1 <= ma3 and ma2 <= ma3)
            true
        else
            false
    else
        if (mode == 1) // UP
            if (ma1 >= ma2 and ma1 >= ma3 and ma2 >= ma3)
                true
            else
                false


cti(sm, src, cd) =>
    di = (sm - 1.0) / 2.0 + 1.0
    c1 = 2 / (di + 1.0)
    c2 = 1 - c1
    c3 = 3.0 * (cd * cd + cd * cd * cd)
    c4 = -3.0 * (2.0 * cd * cd + cd + cd * cd * cd)
    c5 = 3.0 * cd + 1.0 + cd * cd * cd + 3.0 * cd * cd
    i1 = 0.0
    i2 = 0.0
    i3 = 0.0
    i4 = 0.0
    i5 = 0.0
    i6 = 0.0
    i1 := c1*src + c2*nz(i1[1])
    i2 := c1*i1 + c2*nz(i2[1])
    i3 := c1*i2 + c2*nz(i3[1])
    i4 := c1*i3 + c2*nz(i4[1])
    i5 := c1*i4 + c2*nz(i5[1])
    i6 := c1*i5 + c2*nz(i6[1])
        
    bfr = -cd*cd*cd*i6 + c3*(i5) + c4*(i4) + c5*(i3)
    bfr

smma(src, len) =>
    smma = 0.0
    smma := na(smma[1]) ? sma(src, len) : (smma[1] * (len - 1) + src) / len
    smma

ma(smoothing, src, length) => 
    if smoothing == "RMA"
        rma(src, length)
    else
        if smoothing == "SMA"
            sma(src, length)
        else 
            if smoothing == "EMA"
                ema(src, length)
            else 
                if smoothing == "WMA"
                    wma(src, length)
				else
					if smoothing == "VWMA"
						vwma(src, length)
					else
						if smoothing == "SMMA"
						    smma(src, length)
						else
							if smoothing == "HullMA"
								wma(2 * wma(src, length / 2) - wma(src, length), round(sqrt(length)))
							else
								if smoothing == "LSMA"
									src
								else
								    if smoothing == "KMA"
								        xPrice = src
                                        xvnoise = abs(xPrice - xPrice[1])
                                        nfastend = 0.666
                                        nslowend = 0.0645
                                        nsignal = abs(xPrice - xPrice[length])
                                        nnoise = sum(xvnoise, length)
                                        nefratio = iff(nnoise != 0, nsignal / nnoise, 0)
                                        nsmooth = pow(nefratio * (nfastend - nslowend) + nslowend, 2) 
                                        nAMA = 0.0
                                        nAMA := nz(nAMA[1]) + nsmooth * (xPrice - nz(nAMA[1]))
                                        nAMA
								    else
								        if smoothing == "TMA"
									        sma(sma(close, length), length)
						                else
							                if smoothing == "DEMA"
							                    2 * src - ema(src, length)
							                else
							                    if smoothing == "TEMA"
							                        3 * (src - ema(src, length)) + ema(ema(src, length), length) 
							                    else
		    							            src


MA1 = ma(typeofMA1, close, length_ma1)
MA2 = ma(typeofMA2, close, length_ma2)
MA3 = ma(typeofMA3, close, length_ma3)
macrossover = MA_valuation(MA1, MA2, MA3, 1)
macrossunder = MA_valuation(MA1, MA2, MA3, 0) 

curr = 0 - barssince(macrossunder) + barssince(macrossover)
cross_buy = curr < 0 ?  1 : 0
cross_sell = curr > 0 ? 1  : 0

MA_Buy = macrossover ? 1 : 0
MA_Sell = macrossunder ? 1 : 0

sinceUP = barssince(macrossover)
sinceDN = barssince(macrossunder)

nUP = crossunder(sinceUP,sinceDN)
nDN = crossover(sinceUP,sinceDN)


// * ALERTS //

alertcondition(nUP, title='Buy Alert MA Cross Over', message='Buy Alert X MA Cross Over')
alertcondition(nDN, title='Sell Alert MA Cross Under', message='Sell Alert X MA Cross Under')

//plotshape(nUP, title='MA Crossover', style=shape.circle, location=location.belowbar, size=size.normal, color=green, textcolor=black, text="MA Cross", transp = 0)
//plotshape(nDN, title='MA Crossunder', style=shape.circle, location=location.abovebar, size=size.normal, color=red, textcolor=black, text="MA Cross", transp = 0)

plotchar(nUP, "BUY", '⭐', location=location.belowbar, transp=0, size=size.small)
plotchar(nDN, "SELL", '☀️', location=location.abovebar, transp=0, size=size.small, color=color.red)
